@model Gissa.Entities.Usuario
@{
    ViewData["Title"] = "RegisterAccount";
    Layout = "~/Views/Shared/_Layout _Login.cshtml";
}

<div class="content-wrapper d-flex align-items-center auth px-0">
    <div class="row w-100 mx-0">
        <div class="col-lg-8 mx-auto">
            <div class="auth-form-light text-left py-5 px-4 px-sm-5">
                <div class="brand-logo text-center">
                    <img src="~/template/images/GISSA2.png" alt="logo">
                </div>
                @if (ViewBag.UserExistsError != null)
                {
                    <div class="alert alert-danger" role="alert">
                        @ViewBag.UserExistsError
                    </div>
                }

                @using (Html.BeginForm("RegisterAccount", "Login", FormMethod.Post, new { @class = "pt-3", id = "registrationForm" }))
                {
                    @ViewBag.MensajePantalla

                    <div class="row">
                        <div class="col-md-6 mb-4">
                            <div class="form-group mb-4">
                                <label style="font-size: 18px;">Tipo de identificación</label>
                                @Html.DropDownListFor(m => m.IdNationality, ViewBag.XYZ as List<SelectListItem>, new { @class = "form-control", @type = "text", id = "IdNationality", style = "font-size: 18px; padding: 10px;" })
                            </div>
                            <div class="form-group mb-4">
                                <label style="font-size: 18px;">Nombre</label>
                                @Html.TextBoxFor(m => m.NameUser, new { @class = "form-control", @type = "text", @placeholder = "Escriba aquí...", id = "nombre", style = "font-size: 18px; padding: 10px;" })
                                <span class="error-message" id="nombre-error"></span>
                            </div>
                            <div class="form-group mb-4">
                                <label style="font-size: 18px;">Correo Electrónico</label>
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @type = "email", @placeholder = "Escriba aquí...", id = "correo", style = "font-size: 18px; padding: 10px;" })
                                <span class="error-message" id="correo-error"></span>
                            </div>
                            <div class="form-group mb-4">
                                <label style="font-size: 18px;">Contraseña</label>
                                @Html.TextBoxFor(m => m.PasswordUser, new { @class = "form-control", @type = "password", @placeholder = "Escriba aquí...", id = "contrasenna", style = "font-size: 18px; padding: 10px;" })
                                <span class="error-message" id="contrasenna-error"></span>
                            </div>
                        </div>
                        <div class="col-md-6 mb-4">
                            <div class="form-group mb-4">
                                <label style="font-size: 18px;">Identificación</label>
                                @Html.TextBoxFor(m => m.Identification, new { @onkeyup = "return ConsultarNombre()", @class = "form-control", @type = "text", @placeholder = "Escriba aquí...", id = "identificacion", style = "font-size: 18px; padding: 10px;" })
                                <span class="error-message" id="identificacion-error"></span>
                            </div>
                            <div class="form-group mb-4">
                                <label style="font-size: 18px;">Apellidos</label>
                                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @type = "text", @placeholder = "Escriba aquí...", id = "apellidos", style = "font-size: 18px; padding: 10px;" })
                                <span class="error-message" id="apellidos-error"></span>
                            </div>
                            <div class="form-group mb-4">
                                <label style="font-size: 18px;">Confirmar Contraseña</label>
                                @Html.TextBoxFor(m => m.ConfPassUser, new { @class = "form-control", @type = "password", @placeholder = "Escriba aquí...", id = "Confcontrasenna", style = "font-size: 18px; padding: 10px;" })
                                <span class="error-message" id="Confcontrasenna-error"></span>
                            </div>
                            <div class="form-group mb-4">
                                <label style="font-size: 18px;">Teléfono</label>
                                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", @type = "text", @placeholder = "Escriba aquí...", id = "telefono", style = "font-size: 18px; padding: 10px;" })
                                <span class="error-message" id="telefono-error"></span>
                            </div>
                            <div class="form-group mb-4">
                                <label style="font-size: 18px;">Segundo Teléfono: *Opcional</label>
                                @Html.TextBoxFor(m => m.SecondPhone, new { @class = "form-control", @type = "text", @maxlength = "8", @placeholder = "Escriba aquí...", id = "SecondPhone", style = "font-size: 18px; padding: 10px;" })
                                <span class="error-message" id="SecondPhone-error"></span>
                            </div>
                            <div class="form-group mb-4">
                                <label style="font-size: 18px;">Habilidades Blandas</label>
                                @Html.ListBox("SoftSkills", ViewBag.Skills as List<SelectListItem>, new { @class = "form-control", @multiple = "multiple", id = "softSkillsList", style = "font-size: 18px; padding: 10px;" })
                                <span class="error-message" id="softskills-error"></span>
                                <input type="text" id="selectedSoftSkills" class="form-control" readonly style="font-size: 18px; padding: 10px; margin-top: 10px;" placeholder="Habilidades seleccionadas" />
                            </div>
                        </div>
                    </div>

                    <div class="mt-3">
                        <button type="button" onclick="validarFormulario();" class="btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn">REGISTRARSE</button>
                    </div>
                    <div class="text-center mt-4 font-weight-light">
                        ¿Ya tienes una cuenta? <a href="@Url.Action("IniciarSesion","Login")" class="text-primary">Iniciar Sesión</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<style>
    .error-message {
        color: red;
        font-weight: bold;
    }
</style>

@section scripts {
    <script>
        // Al hacer clic en las habilidades blandas, actualizar el campo de texto con las seleccionadas
        $(document).ready(function () {
            $('#softSkillsList option').click(function () {
                $(this).toggleClass('selected');
                updateSelectedSoftSkills();
            });
        });

        function updateSelectedSoftSkills() {
            var selectedSkills = $('#softSkillsList option.selected').map(function () {
                return $(this).text();
            }).get();
            $('#selectedSoftSkills').val(selectedSkills.join(', '));
        }

        function validarFormulario() {
            var identificacion = document.getElementById("identificacion").value;
            var nombre = document.getElementById("nombre").value;
            var apellidos = document.getElementById("apellidos").value;
            var correo = document.getElementById("correo").value;
            var telefono = document.getElementById("telefono").value;
            var contrasenna = document.getElementById("contrasenna").value;
            var Confcontrasenna = document.getElementById("Confcontrasenna").value;
            var selectedValue = document.getElementById("IdNationality").value;

            var isValid = true;

            // Resetear los mensajes de error
            resetErrorMessages();

            // Validación de identificación según el tipo seleccionado
            switch (selectedValue) {
                case '1': // Identificacion Nacional
                    if (!identificacion || !/^[0-9]{9}$/.test(identificacion)) {
                        displayErrorMessage("identificacion", "Identificación nacional debe tener 9 dígitos numéricos.");
                        isValid = false;
                    }
                    break;
                case '2': // DNI
                    if (!identificacion || !/^[0-9]{10}$/.test(identificacion)) {
                        displayErrorMessage("identificacion", "DNI debe tener 10 dígitos numéricos.");
                        isValid = false;
                    }
                    break;
                case '3': // Cedula de Extranjeria
                    if (!identificacion || !/^[0-9]{11}$/.test(identificacion)) {
                        displayErrorMessage("identificacion", "Cédula de extranjería debe tener 11 dígitos numéricos.");
                        isValid = false;
                    }
                    break;
                default:
                    break;
            }

            // Validación de otros campos
            if (!nombre) {
                displayErrorMessage("nombre", "El nombre es obligatorio.");
                isValid = false;
            }
            if (!apellidos) {
                displayErrorMessage("apellidos", "Los apellidos son obligatorios.");
                isValid = false;
            }
            if (!correo) {
                displayErrorMessage("correo", "El correo es obligatorio.");
                isValid = false;
            }
            if (!telefono || telefono.length !== 8 || !/^[0-9]{8}$/.test(telefono)) {
                displayErrorMessage("telefono", "El teléfono debe tener 8 dígitos numéricos.");
                isValid = false;
            }
            if (!contrasenna) {
                displayErrorMessage("contrasenna", "La contraseña es obligatoria.");
                isValid = false;
            }
            if (contrasenna !== Confcontrasenna) {
                displayErrorMessage("Confcontrasenna", "Las contraseñas no coinciden.");
                isValid = false;
            }

            // Verificar que se seleccionen al menos 3 habilidades blandas
            var selectedSoftSkills = $('#softSkillsList option.selected');
            if (selectedSoftSkills.length < 3) {
                displayErrorMessage("softskills", "Debes seleccionar al menos 3 habilidades blandas.");
                isValid = false;
            }

            // Si todo es válido, enviar el formulario
            if (isValid) {
                $('#registrationForm').submit();
            }
        }

        function displayErrorMessage(fieldId, message) {
            document.getElementById(fieldId + "-error").innerText = message;
        }

        function resetErrorMessages() {
            var errorFields = ["nombre", "correo", "apellidos", "telefono", "contrasenna", "Confcontrasenna", "identificacion", "softskills"];
            for (var i = 0; i < errorFields.length; i++) {
                document.getElementById(errorFields[i] + "-error").innerText = "";
            }
        }
    </script>

}
